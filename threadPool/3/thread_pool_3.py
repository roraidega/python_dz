"""
Создайте функцию которая из файла Names.txt берет имена, превращает его в путь до файла и помещает в очередь.
Создайте функцию которая создает txt файл  по пути из очереди.
Запустите все в разных потоках.
"""
import os  # модуль для работы с операционной системой
import queue  # модуль для работы с очередью
import threading  # модуль для работы с потоками

# Функция для создания пути до файла и добавления его в очередь
def create_file_path(name, q):
    file_path = os.path.join('/home/renata/Рабочий стол/files', f"{name}.txt")  # создаем путь до файла
    q.put(file_path)  # добавляем путь до файла в очередь

# Функция для создания файла по пути из очереди
def create_file(q):
    while not q.empty():  # пока очередь не пуста
        file_path = q.get()  # получаем путь до файла из очереди
        with open(file_path, 'w') as file:  # открываем файл для записи
            file.write("Hello, world!")  # записываем текст в файл

# Создаем очередь и заполняем ее путями до файлов
q = queue.Queue()  # создаем пустую очередь
with open('/home/renata/Рабочий стол/files/Names.txt', 'r') as file:  # открываем файл с именами для чтения
    names = file.read().splitlines()  # читаем содержимое файла и разбиваем его на строки
for name in names:  # перебираем список имен
    create_file_path(name, q)  # создаем путь до файла и добавляем его в очередь

# Создаем список потоков и запускаем их
threads = []  # создаем пустой список потоков
for i in range(5):  # запускаем 5 потоков
    thread = threading.Thread(target=create_file, args=(q,))  # создаем новый поток для функции create_file
    thread.start()  # запускаем поток
    threads.append(thread)  # добавляем поток в список

# Ожидаем завершения всех потоков
for thread in threads:  # перебираем список потоков
    thread.join()  # ждем завершения каждого потока

print("All files created!")  # выводим сообщение об окончании работы программы